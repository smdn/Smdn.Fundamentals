// SPDX-FileCopyrightText: 2022 smdn <smdn@smdn.jp>
// SPDX-License-Identifier: MIT
using System;
using NUnit.Framework;

namespace Smdn;

[TestFixture()]
public class BitOperationsShimTests {
  [Test]
  public void ShimType_IsPow2()
    => Assert.AreEqual(
      typeof(ShimTypeSystemNumericsBitOperationsIsPow2),
#if SYSTEM_NUMERICS_BITOPERATIONS_ISPOW2
      typeof(System.Numerics.BitOperations)
#else
      typeof(Smdn.BitOperationsShim)
#endif
    );

  [TestCase(0b_00000000_00000000_00000000_00000000u, false)]
  [TestCase(0b_00000000_00000000_00000000_00000001u,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000010u,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000100u,  true)]
  [TestCase(0b_00000000_00000000_00000000_00001000u,  true)]
  [TestCase(0b_00000000_00000000_00000000_00010000u,  true)]
  [TestCase(0b_00000000_00000000_00000000_00100000u,  true)]
  [TestCase(0b_00000000_00000000_00000000_01000000u,  true)]
  [TestCase(0b_00000000_00000000_00000000_10000000u,  true)]
  [TestCase(0b_00000000_00000000_00000001_00000000u,  true)]
  [TestCase(0b_00000000_00000000_00000010_00000000u,  true)]
  [TestCase(0b_00000000_00000000_00000100_00000000u,  true)]
  [TestCase(0b_00000000_00000000_00001000_00000000u,  true)]
  [TestCase(0b_00000000_00000000_00010000_00000000u,  true)]
  [TestCase(0b_00000000_00000000_00100000_00000000u,  true)]
  [TestCase(0b_00000000_00000000_01000000_00000000u,  true)]
  [TestCase(0b_00000000_00000000_10000000_00000000u,  true)]
  [TestCase(0b_00000000_00000001_00000000_00000000u,  true)]
  [TestCase(0b_00000000_00000010_00000000_00000000u,  true)]
  [TestCase(0b_00000000_00000100_00000000_00000000u,  true)]
  [TestCase(0b_00000000_00001000_00000000_00000000u,  true)]
  [TestCase(0b_00000000_00010000_00000000_00000000u,  true)]
  [TestCase(0b_00000000_00100000_00000000_00000000u,  true)]
  [TestCase(0b_00000000_01000000_00000000_00000000u,  true)]
  [TestCase(0b_00000000_10000000_00000000_00000000u,  true)]
  [TestCase(0b_00000001_00000000_00000000_00000000u,  true)]
  [TestCase(0b_00000010_00000000_00000000_00000000u,  true)]
  [TestCase(0b_00000100_00000000_00000000_00000000u,  true)]
  [TestCase(0b_00001000_00000000_00000000_00000000u,  true)]
  [TestCase(0b_00010000_00000000_00000000_00000000u,  true)]
  [TestCase(0b_00100000_00000000_00000000_00000000u,  true)]
  [TestCase(0b_01000000_00000000_00000000_00000000u,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000011u, false)]
  [TestCase(0b_00000000_00000000_00000000_00000110u, false)]
  public void IsPow2_XInt32(uint value, bool expected)
  {
    Assert.AreEqual(expected, ShimTypeSystemNumericsBitOperationsIsPow2.IsPow2(unchecked((int)value)), $"IsPow2<int>({value:X8})");
    Assert.AreEqual(expected, ShimTypeSystemNumericsBitOperationsIsPow2.IsPow2(value), $"IsPow2<uint>({value:X8})");
  }

  [TestCase(0b_10000000_00000000_00000000_00000000u,  true)]
  [TestCase(0b_11000000_00000000_00000000_00000000u, false)]
  [TestCase(0b_10000000_00000000_00000000_00000001u, false)]
  [TestCase(0b_11111111_11111111_11111111_11111111u, false)]
  [TestCase(0b_11111111_11111111_11111111_11111110u, false)]
  public void IsPow2_UInt32(uint value, bool expected)
    => Assert.AreEqual(expected, ShimTypeSystemNumericsBitOperationsIsPow2.IsPow2(value), $"IsPow2<uint>({value:X8})");

  [TestCase(0b_10000000_00000000_00000000_00000000u, false)] // negative value
  [TestCase(0b_11000000_00000000_00000000_00000000u, false)] // negative value
  [TestCase(0b_10000000_00000000_00000000_00000001u, false)] // negative value
  [TestCase(0b_11111111_11111111_11111111_11111111u, false)] // negative value
  [TestCase(0b_11111111_11111111_11111111_11111110u, false)] // negative value
  public void IsPow2_Int32(uint value, bool expected)
    => Assert.AreEqual(expected, ShimTypeSystemNumericsBitOperationsIsPow2.IsPow2(unchecked((int)value)), $"IsPow2<int>({value:X8})");

  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, false)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000001uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000010uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000100uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00001000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00010000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00100000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_01000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_10000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000001_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000010_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000100_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00001000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00010000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00100000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_01000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_10000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000001_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000010_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000100_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00001000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00010000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00100000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_01000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_10000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000001_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000010_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000100_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00001000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00010000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00100000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_01000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_10000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000001_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000010_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000100_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00001000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00010000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00100000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_01000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_10000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000001_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000010_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000100_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00001000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00010000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00100000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_01000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_10000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000001_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000010_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000100_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00001000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00010000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00100000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_01000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_10000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000001_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000010_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000100_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00001000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00010000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00100000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_01000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000011uL, false)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000110uL, false)]
  public void IsPow2_XInt64(ulong value, bool expected)
  {
    Assert.AreEqual(expected, ShimTypeSystemNumericsBitOperationsIsPow2.IsPow2(unchecked((long)value)), $"IsPow2<long>({value:X16})");
    Assert.AreEqual(expected, ShimTypeSystemNumericsBitOperationsIsPow2.IsPow2(value), $"IsPow2<ulong>({value:X16})");
  }

  [TestCase(0b_10000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  true)]
  [TestCase(0b_11000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, false)]
  [TestCase(0b_10000000_00000000_00000000_00000000_00000000_00000000_00000000_00000001uL, false)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, false)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111110uL, false)]
  public void IsPow2_UInt64(ulong value, bool expected)
    => Assert.AreEqual(expected, ShimTypeSystemNumericsBitOperationsIsPow2.IsPow2(value), $"IsPow2<ulong>({value:X16})");

  [TestCase(0b_10000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, false)] // negative value
  [TestCase(0b_11000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, false)] // negative value
  [TestCase(0b_10000000_00000000_00000000_00000000_00000000_00000000_00000000_00000001uL, false)] // negative value
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, false)] // negative value
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111110uL, false)] // negative value
  public void IsPow2_Int64(ulong value, bool expected)
    => Assert.AreEqual(expected, ShimTypeSystemNumericsBitOperationsIsPow2.IsPow2(unchecked((long)value)), $"IsPow2<long>({value:X16})");

  [Test]
  public void ShimType_Log2()
    => Assert.AreEqual(
      typeof(ShimTypeSystemNumericsBitOperationsLog2),
#if SYSTEM_NUMERICS_BITOPERATIONS_LOG2
      typeof(System.Numerics.BitOperations)
#else
      typeof(Smdn.BitOperationsShim)
#endif
    );

  [TestCase(0b_00000000_00000000_00000000_00000000u,  0)]
  [TestCase(0b_00000000_00000000_00000000_00000001u,  0)]
  [TestCase(0b_00000000_00000000_00000000_00000010u,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000011u,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000100u,  2)]
  [TestCase(0b_00000000_00000000_00000000_00001000u,  3)]
  [TestCase(0b_00000000_00000000_00000000_00010000u,  4)]
  [TestCase(0b_00000000_00000000_00000000_00100000u,  5)]
  [TestCase(0b_00000000_00000000_00000000_01000000u,  6)]
  [TestCase(0b_00000000_00000000_00000000_10000000u,  7)]
  [TestCase(0b_00000000_00000000_00000001_00000000u,  8)]
  [TestCase(0b_00000000_00000000_00000010_00000000u,  9)]
  [TestCase(0b_00000000_00000000_00000100_00000000u, 10)]
  [TestCase(0b_00000000_00000000_00001000_00000000u, 11)]
  [TestCase(0b_00000000_00000000_00010000_00000000u, 12)]
  [TestCase(0b_00000000_00000000_00100000_00000000u, 13)]
  [TestCase(0b_00000000_00000000_01000000_00000000u, 14)]
  [TestCase(0b_00000000_00000000_10000000_00000000u, 15)]
  [TestCase(0b_00000000_00000001_00000000_00000000u, 16)]
  [TestCase(0b_00000000_00000010_00000000_00000000u, 17)]
  [TestCase(0b_00000000_00000100_00000000_00000000u, 18)]
  [TestCase(0b_00000000_00001000_00000000_00000000u, 19)]
  [TestCase(0b_00000000_00010000_00000000_00000000u, 20)]
  [TestCase(0b_00000000_00100000_00000000_00000000u, 21)]
  [TestCase(0b_00000000_01000000_00000000_00000000u, 22)]
  [TestCase(0b_00000000_10000000_00000000_00000000u, 23)]
  [TestCase(0b_00000001_00000000_00000000_00000000u, 24)]
  [TestCase(0b_00000010_00000000_00000000_00000000u, 25)]
  [TestCase(0b_00000100_00000000_00000000_00000000u, 26)]
  [TestCase(0b_00001000_00000000_00000000_00000000u, 27)]
  [TestCase(0b_00010000_00000000_00000000_00000000u, 28)]
  [TestCase(0b_00100000_00000000_00000000_00000000u, 29)]
  [TestCase(0b_01000000_00000000_00000000_00000000u, 30)]
  [TestCase(0b_10000000_00000000_00000000_00000000u, 31)]
  [TestCase(0b_11111111_11111111_11111111_11111111u, 31)]
  public void Log2_UInt32(uint value, int expected)
    => Assert.AreEqual(
      expected, ShimTypeSystemNumericsBitOperationsLog2.Log2(value),
      $"Log2<UInt32>({value:X8})"
    );

  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  0)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000001uL,  0)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000010uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000011uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000100uL,  2)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00001000uL,  3)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00010000uL,  4)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00100000uL,  5)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_01000000uL,  6)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_10000000uL,  7)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000001_00000000uL,  8)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000010_00000000uL,  9)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000100_00000000uL, 10)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00001000_00000000uL, 11)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00010000_00000000uL, 12)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00100000_00000000uL, 13)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_01000000_00000000uL, 14)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_10000000_00000000uL, 15)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000001_00000000_00000000uL, 16)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000010_00000000_00000000uL, 17)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000100_00000000_00000000uL, 18)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00001000_00000000_00000000uL, 19)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00010000_00000000_00000000uL, 20)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00100000_00000000_00000000uL, 21)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_01000000_00000000_00000000uL, 22)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_10000000_00000000_00000000uL, 23)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000001_00000000_00000000_00000000uL, 24)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000010_00000000_00000000_00000000uL, 25)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000100_00000000_00000000_00000000uL, 26)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00001000_00000000_00000000_00000000uL, 27)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00010000_00000000_00000000_00000000uL, 28)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00100000_00000000_00000000_00000000uL, 29)]
  [TestCase(0b_00000000_00000000_00000000_00000000_01000000_00000000_00000000_00000000uL, 30)]
  [TestCase(0b_00000000_00000000_00000000_00000000_10000000_00000000_00000000_00000000uL, 31)]
  [TestCase(0b_00000000_00000000_00000000_00000001_00000000_00000000_00000000_00000000uL, 32)]
  [TestCase(0b_00000000_00000000_00000000_00000010_00000000_00000000_00000000_00000000uL, 33)]
  [TestCase(0b_00000000_00000000_00000000_00000100_00000000_00000000_00000000_00000000uL, 34)]
  [TestCase(0b_00000000_00000000_00000000_00001000_00000000_00000000_00000000_00000000uL, 35)]
  [TestCase(0b_00000000_00000000_00000000_00010000_00000000_00000000_00000000_00000000uL, 36)]
  [TestCase(0b_00000000_00000000_00000000_00100000_00000000_00000000_00000000_00000000uL, 37)]
  [TestCase(0b_00000000_00000000_00000000_01000000_00000000_00000000_00000000_00000000uL, 38)]
  [TestCase(0b_00000000_00000000_00000000_10000000_00000000_00000000_00000000_00000000uL, 39)]
  [TestCase(0b_00000000_00000000_00000001_00000000_00000000_00000000_00000000_00000000uL, 40)]
  [TestCase(0b_00000000_00000000_00000010_00000000_00000000_00000000_00000000_00000000uL, 41)]
  [TestCase(0b_00000000_00000000_00000100_00000000_00000000_00000000_00000000_00000000uL, 42)]
  [TestCase(0b_00000000_00000000_00001000_00000000_00000000_00000000_00000000_00000000uL, 43)]
  [TestCase(0b_00000000_00000000_00010000_00000000_00000000_00000000_00000000_00000000uL, 44)]
  [TestCase(0b_00000000_00000000_00100000_00000000_00000000_00000000_00000000_00000000uL, 45)]
  [TestCase(0b_00000000_00000000_01000000_00000000_00000000_00000000_00000000_00000000uL, 46)]
  [TestCase(0b_00000000_00000000_10000000_00000000_00000000_00000000_00000000_00000000uL, 47)]
  [TestCase(0b_00000000_00000001_00000000_00000000_00000000_00000000_00000000_00000000uL, 48)]
  [TestCase(0b_00000000_00000010_00000000_00000000_00000000_00000000_00000000_00000000uL, 49)]
  [TestCase(0b_00000000_00000100_00000000_00000000_00000000_00000000_00000000_00000000uL, 50)]
  [TestCase(0b_00000000_00001000_00000000_00000000_00000000_00000000_00000000_00000000uL, 51)]
  [TestCase(0b_00000000_00010000_00000000_00000000_00000000_00000000_00000000_00000000uL, 52)]
  [TestCase(0b_00000000_00100000_00000000_00000000_00000000_00000000_00000000_00000000uL, 53)]
  [TestCase(0b_00000000_01000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 54)]
  [TestCase(0b_00000000_10000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 55)]
  [TestCase(0b_00000001_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 56)]
  [TestCase(0b_00000010_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 57)]
  [TestCase(0b_00000100_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 58)]
  [TestCase(0b_00001000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 59)]
  [TestCase(0b_00010000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 60)]
  [TestCase(0b_00100000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 61)]
  [TestCase(0b_01000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 62)]
  [TestCase(0b_10000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 63)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 63)]
  public void Log2_UInt64(ulong value, int expected)
    => Assert.AreEqual(
      expected, ShimTypeSystemNumericsBitOperationsLog2.Log2(value),
      $"Log2<UInt64>({value:X16})"
    );

  [Test]
  public void ShimType_PopCount()
    => Assert.AreEqual(
      typeof(ShimTypeSystemNumericsBitOperationsPopCount),
#if SYSTEM_NUMERICS_BITOPERATIONS_POPCOUNT
      typeof(System.Numerics.BitOperations)
#else
      typeof(Smdn.BitOperationsShim)
#endif
    );

  [TestCase(0b_00000000_00000000_00000000_00000000u,  0)]
  [TestCase(0b_00000000_00000000_00000000_00000001u,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000010u,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000100u,  1)]
  [TestCase(0b_00000000_00000000_00000000_00001000u,  1)]
  [TestCase(0b_00000000_00000000_00000000_00010000u,  1)]
  [TestCase(0b_00000000_00000000_00000000_00100000u,  1)]
  [TestCase(0b_00000000_00000000_00000000_01000000u,  1)]
  [TestCase(0b_00000000_00000000_00000000_10000000u,  1)]
  [TestCase(0b_00000000_00000000_00000001_00000000u,  1)]
  [TestCase(0b_00000000_00000000_00000010_00000000u,  1)]
  [TestCase(0b_00000000_00000000_00000100_00000000u,  1)]
  [TestCase(0b_00000000_00000000_00001000_00000000u,  1)]
  [TestCase(0b_00000000_00000000_00010000_00000000u,  1)]
  [TestCase(0b_00000000_00000000_00100000_00000000u,  1)]
  [TestCase(0b_00000000_00000000_01000000_00000000u,  1)]
  [TestCase(0b_00000000_00000000_10000000_00000000u,  1)]
  [TestCase(0b_00000000_00000001_00000000_00000000u,  1)]
  [TestCase(0b_00000000_00000010_00000000_00000000u,  1)]
  [TestCase(0b_00000000_00000100_00000000_00000000u,  1)]
  [TestCase(0b_00000000_00001000_00000000_00000000u,  1)]
  [TestCase(0b_00000000_00010000_00000000_00000000u,  1)]
  [TestCase(0b_00000000_00100000_00000000_00000000u,  1)]
  [TestCase(0b_00000000_01000000_00000000_00000000u,  1)]
  [TestCase(0b_00000000_10000000_00000000_00000000u,  1)]
  [TestCase(0b_00000001_00000000_00000000_00000000u,  1)]
  [TestCase(0b_00000010_00000000_00000000_00000000u,  1)]
  [TestCase(0b_00000100_00000000_00000000_00000000u,  1)]
  [TestCase(0b_00001000_00000000_00000000_00000000u,  1)]
  [TestCase(0b_00010000_00000000_00000000_00000000u,  1)]
  [TestCase(0b_00100000_00000000_00000000_00000000u,  1)]
  [TestCase(0b_01000000_00000000_00000000_00000000u,  1)]
  [TestCase(0b_10000000_00000000_00000000_00000000u,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000011u,  2)]
  [TestCase(0b_00000000_00000000_00000000_00000111u,  3)]
  [TestCase(0b_00000000_00000000_00000000_00001111u,  4)]
  [TestCase(0b_00000000_00000000_00000000_00011111u,  5)]
  [TestCase(0b_00000000_00000000_00000000_00111111u,  6)]
  [TestCase(0b_00000000_00000000_00000000_01111111u,  7)]
  [TestCase(0b_00000000_00000000_00000000_11111111u,  8)]
  [TestCase(0b_00000000_00000000_00000001_11111111u,  9)]
  [TestCase(0b_00000000_00000000_00000011_11111111u, 10)]
  [TestCase(0b_00000000_00000000_00000111_11111111u, 11)]
  [TestCase(0b_00000000_00000000_00001111_11111111u, 12)]
  [TestCase(0b_00000000_00000000_00011111_11111111u, 13)]
  [TestCase(0b_00000000_00000000_00111111_11111111u, 14)]
  [TestCase(0b_00000000_00000000_01111111_11111111u, 15)]
  [TestCase(0b_00000000_00000000_11111111_11111111u, 16)]
  [TestCase(0b_00000000_00000001_11111111_11111111u, 17)]
  [TestCase(0b_00000000_00000011_11111111_11111111u, 18)]
  [TestCase(0b_00000000_00000111_11111111_11111111u, 19)]
  [TestCase(0b_00000000_00001111_11111111_11111111u, 20)]
  [TestCase(0b_00000000_00011111_11111111_11111111u, 21)]
  [TestCase(0b_00000000_00111111_11111111_11111111u, 22)]
  [TestCase(0b_00000000_01111111_11111111_11111111u, 23)]
  [TestCase(0b_00000000_11111111_11111111_11111111u, 24)]
  [TestCase(0b_00000001_11111111_11111111_11111111u, 25)]
  [TestCase(0b_00000011_11111111_11111111_11111111u, 26)]
  [TestCase(0b_00000111_11111111_11111111_11111111u, 27)]
  [TestCase(0b_00001111_11111111_11111111_11111111u, 28)]
  [TestCase(0b_00011111_11111111_11111111_11111111u, 29)]
  [TestCase(0b_00111111_11111111_11111111_11111111u, 30)]
  [TestCase(0b_01111111_11111111_11111111_11111111u, 31)]
  [TestCase(0b_11000000_00000000_00000000_00000000u,  2)]
  [TestCase(0b_11100000_00000000_00000000_00000000u,  3)]
  [TestCase(0b_11110000_00000000_00000000_00000000u,  4)]
  [TestCase(0b_11111000_00000000_00000000_00000000u,  5)]
  [TestCase(0b_11111100_00000000_00000000_00000000u,  6)]
  [TestCase(0b_11111110_00000000_00000000_00000000u,  7)]
  [TestCase(0b_11111111_00000000_00000000_00000000u,  8)]
  [TestCase(0b_11111111_10000000_00000000_00000000u,  9)]
  [TestCase(0b_11111111_11000000_00000000_00000000u, 10)]
  [TestCase(0b_11111111_11100000_00000000_00000000u, 11)]
  [TestCase(0b_11111111_11110000_00000000_00000000u, 12)]
  [TestCase(0b_11111111_11111000_00000000_00000000u, 13)]
  [TestCase(0b_11111111_11111100_00000000_00000000u, 14)]
  [TestCase(0b_11111111_11111110_00000000_00000000u, 15)]
  [TestCase(0b_11111111_11111111_00000000_00000000u, 16)]
  [TestCase(0b_11111111_11111111_10000000_00000000u, 17)]
  [TestCase(0b_11111111_11111111_11000000_00000000u, 18)]
  [TestCase(0b_11111111_11111111_11100000_00000000u, 19)]
  [TestCase(0b_11111111_11111111_11110000_00000000u, 20)]
  [TestCase(0b_11111111_11111111_11111000_00000000u, 21)]
  [TestCase(0b_11111111_11111111_11111100_00000000u, 22)]
  [TestCase(0b_11111111_11111111_11111110_00000000u, 23)]
  [TestCase(0b_11111111_11111111_11111111_00000000u, 24)]
  [TestCase(0b_11111111_11111111_11111111_10000000u, 25)]
  [TestCase(0b_11111111_11111111_11111111_11000000u, 26)]
  [TestCase(0b_11111111_11111111_11111111_11100000u, 27)]
  [TestCase(0b_11111111_11111111_11111111_11110000u, 28)]
  [TestCase(0b_11111111_11111111_11111111_11111000u, 29)]
  [TestCase(0b_11111111_11111111_11111111_11111100u, 30)]
  [TestCase(0b_11111111_11111111_11111111_11111110u, 31)]
  [TestCase(0b_11111111_11111111_11111111_11111111u, 32)]
  public void PopCount_UInt32(uint value, int expectedValue)
    => Assert.AreEqual(
      expectedValue,
      ShimTypeSystemNumericsBitOperationsPopCount.PopCount(value),
      $"PopCount<uint>({value:X8})"
    );

  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  0)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000001uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000010uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000100uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00001000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00010000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00100000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_01000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_10000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000001_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000010_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000100_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00001000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00010000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00100000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_01000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_10000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000001_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000010_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000100_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00001000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00010000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00100000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_01000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_10000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000001_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000010_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000100_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00001000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00010000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00100000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_01000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_10000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000001_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000010_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000100_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00001000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00010000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00100000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_01000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_10000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000001_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000010_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000100_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00001000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00010000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00100000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_01000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_10000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000001_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000010_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000100_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00001000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00010000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00100000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_01000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_10000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000001_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000010_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000100_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00001000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00010000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00100000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_01000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_10000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000011uL,  2)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000111uL,  3)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00001111uL,  4)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00011111uL,  5)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00111111uL,  6)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_01111111uL,  7)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_11111111uL,  8)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000001_11111111uL,  9)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000011_11111111uL, 10)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000111_11111111uL, 11)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00001111_11111111uL, 12)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00011111_11111111uL, 13)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00111111_11111111uL, 14)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_01111111_11111111uL, 15)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_11111111_11111111uL, 16)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000001_11111111_11111111uL, 17)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000011_11111111_11111111uL, 18)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000111_11111111_11111111uL, 19)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00001111_11111111_11111111uL, 20)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00011111_11111111_11111111uL, 21)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00111111_11111111_11111111uL, 22)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_01111111_11111111_11111111uL, 23)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_11111111_11111111_11111111uL, 24)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000001_11111111_11111111_11111111uL, 25)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000011_11111111_11111111_11111111uL, 26)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000111_11111111_11111111_11111111uL, 27)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00001111_11111111_11111111_11111111uL, 28)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00011111_11111111_11111111_11111111uL, 29)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00111111_11111111_11111111_11111111uL, 30)]
  [TestCase(0b_00000000_00000000_00000000_00000000_01111111_11111111_11111111_11111111uL, 31)]
  [TestCase(0b_00000000_00000000_00000000_00000000_11111111_11111111_11111111_11111111uL, 32)]
  [TestCase(0b_00000000_00000000_00000000_00000001_11111111_11111111_11111111_11111111uL, 33)]
  [TestCase(0b_00000000_00000000_00000000_00000011_11111111_11111111_11111111_11111111uL, 34)]
  [TestCase(0b_00000000_00000000_00000000_00000111_11111111_11111111_11111111_11111111uL, 35)]
  [TestCase(0b_00000000_00000000_00000000_00001111_11111111_11111111_11111111_11111111uL, 36)]
  [TestCase(0b_00000000_00000000_00000000_00011111_11111111_11111111_11111111_11111111uL, 37)]
  [TestCase(0b_00000000_00000000_00000000_00111111_11111111_11111111_11111111_11111111uL, 38)]
  [TestCase(0b_00000000_00000000_00000000_01111111_11111111_11111111_11111111_11111111uL, 39)]
  [TestCase(0b_00000000_00000000_00000000_11111111_11111111_11111111_11111111_11111111uL, 40)]
  [TestCase(0b_00000000_00000000_00000001_11111111_11111111_11111111_11111111_11111111uL, 41)]
  [TestCase(0b_00000000_00000000_00000011_11111111_11111111_11111111_11111111_11111111uL, 42)]
  [TestCase(0b_00000000_00000000_00000111_11111111_11111111_11111111_11111111_11111111uL, 43)]
  [TestCase(0b_00000000_00000000_00001111_11111111_11111111_11111111_11111111_11111111uL, 44)]
  [TestCase(0b_00000000_00000000_00011111_11111111_11111111_11111111_11111111_11111111uL, 45)]
  [TestCase(0b_00000000_00000000_00111111_11111111_11111111_11111111_11111111_11111111uL, 46)]
  [TestCase(0b_00000000_00000000_01111111_11111111_11111111_11111111_11111111_11111111uL, 47)]
  [TestCase(0b_00000000_00000000_11111111_11111111_11111111_11111111_11111111_11111111uL, 48)]
  [TestCase(0b_00000000_00000001_11111111_11111111_11111111_11111111_11111111_11111111uL, 49)]
  [TestCase(0b_00000000_00000011_11111111_11111111_11111111_11111111_11111111_11111111uL, 50)]
  [TestCase(0b_00000000_00000111_11111111_11111111_11111111_11111111_11111111_11111111uL, 51)]
  [TestCase(0b_00000000_00001111_11111111_11111111_11111111_11111111_11111111_11111111uL, 52)]
  [TestCase(0b_00000000_00011111_11111111_11111111_11111111_11111111_11111111_11111111uL, 53)]
  [TestCase(0b_00000000_00111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 54)]
  [TestCase(0b_00000000_01111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 55)]
  [TestCase(0b_00000000_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 56)]
  [TestCase(0b_00000001_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 57)]
  [TestCase(0b_00000011_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 58)]
  [TestCase(0b_00000111_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 59)]
  [TestCase(0b_00001111_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 60)]
  [TestCase(0b_00011111_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 61)]
  [TestCase(0b_00111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 62)]
  [TestCase(0b_01111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 63)]
  [TestCase(0b_11000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  2)]
  [TestCase(0b_11100000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  3)]
  [TestCase(0b_11110000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  4)]
  [TestCase(0b_11111000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  5)]
  [TestCase(0b_11111100_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  6)]
  [TestCase(0b_11111110_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  7)]
  [TestCase(0b_11111111_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  8)]
  [TestCase(0b_11111111_10000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  9)]
  [TestCase(0b_11111111_11000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 10)]
  [TestCase(0b_11111111_11100000_00000000_00000000_00000000_00000000_00000000_00000000uL, 11)]
  [TestCase(0b_11111111_11110000_00000000_00000000_00000000_00000000_00000000_00000000uL, 12)]
  [TestCase(0b_11111111_11111000_00000000_00000000_00000000_00000000_00000000_00000000uL, 13)]
  [TestCase(0b_11111111_11111100_00000000_00000000_00000000_00000000_00000000_00000000uL, 14)]
  [TestCase(0b_11111111_11111110_00000000_00000000_00000000_00000000_00000000_00000000uL, 15)]
  [TestCase(0b_11111111_11111111_00000000_00000000_00000000_00000000_00000000_00000000uL, 16)]
  [TestCase(0b_11111111_11111111_10000000_00000000_00000000_00000000_00000000_00000000uL, 17)]
  [TestCase(0b_11111111_11111111_11000000_00000000_00000000_00000000_00000000_00000000uL, 18)]
  [TestCase(0b_11111111_11111111_11100000_00000000_00000000_00000000_00000000_00000000uL, 19)]
  [TestCase(0b_11111111_11111111_11110000_00000000_00000000_00000000_00000000_00000000uL, 20)]
  [TestCase(0b_11111111_11111111_11111000_00000000_00000000_00000000_00000000_00000000uL, 21)]
  [TestCase(0b_11111111_11111111_11111100_00000000_00000000_00000000_00000000_00000000uL, 22)]
  [TestCase(0b_11111111_11111111_11111110_00000000_00000000_00000000_00000000_00000000uL, 23)]
  [TestCase(0b_11111111_11111111_11111111_00000000_00000000_00000000_00000000_00000000uL, 24)]
  [TestCase(0b_11111111_11111111_11111111_10000000_00000000_00000000_00000000_00000000uL, 25)]
  [TestCase(0b_11111111_11111111_11111111_11000000_00000000_00000000_00000000_00000000uL, 26)]
  [TestCase(0b_11111111_11111111_11111111_11100000_00000000_00000000_00000000_00000000uL, 27)]
  [TestCase(0b_11111111_11111111_11111111_11110000_00000000_00000000_00000000_00000000uL, 28)]
  [TestCase(0b_11111111_11111111_11111111_11111000_00000000_00000000_00000000_00000000uL, 29)]
  [TestCase(0b_11111111_11111111_11111111_11111100_00000000_00000000_00000000_00000000uL, 30)]
  [TestCase(0b_11111111_11111111_11111111_11111110_00000000_00000000_00000000_00000000uL, 31)]
  [TestCase(0b_11111111_11111111_11111111_11111111_00000000_00000000_00000000_00000000uL, 32)]
  [TestCase(0b_11111111_11111111_11111111_11111111_10000000_00000000_00000000_00000000uL, 33)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11000000_00000000_00000000_00000000uL, 34)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11100000_00000000_00000000_00000000uL, 35)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11110000_00000000_00000000_00000000uL, 36)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111000_00000000_00000000_00000000uL, 37)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111100_00000000_00000000_00000000uL, 38)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111110_00000000_00000000_00000000uL, 39)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_00000000_00000000_00000000uL, 40)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_10000000_00000000_00000000uL, 41)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11000000_00000000_00000000uL, 42)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11100000_00000000_00000000uL, 43)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11110000_00000000_00000000uL, 44)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111000_00000000_00000000uL, 45)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111100_00000000_00000000uL, 46)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111110_00000000_00000000uL, 47)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_00000000_00000000uL, 48)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_10000000_00000000uL, 49)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11000000_00000000uL, 50)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11100000_00000000uL, 51)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11110000_00000000uL, 52)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111000_00000000uL, 53)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111100_00000000uL, 54)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111110_00000000uL, 55)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_00000000uL, 56)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_10000000uL, 57)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11000000uL, 58)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11100000uL, 59)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11110000uL, 60)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111000uL, 61)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111100uL, 62)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111110uL, 63)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL, 64)]
  public void PopCount_UInt64(ulong value, int expectedValue)
    => Assert.AreEqual(
      expectedValue,
      ShimTypeSystemNumericsBitOperationsPopCount.PopCount(value),
      $"PopCount<ulong>({value:X16})"
    );

  [Test]
  public void ShimType_LeadingZeroCount()
    => Assert.AreEqual(
      typeof(ShimTypeSystemNumericsBitOperationsLeadingZeroCount),
#if SYSTEM_NUMERICS_BITOPERATIONS_LEADINGZEROCOUNT
      typeof(System.Numerics.BitOperations)
#else
      typeof(Smdn.BitOperationsShim)
#endif
    );

  [TestCase(0b_00000000_00000000_00000000_00000000u, 32)]
  [TestCase(0b_00000000_00000000_00000000_00000001u, 31)]
  [TestCase(0b_00000000_00000000_00000000_00000010u, 30)]
  [TestCase(0b_00000000_00000000_00000000_00000011u, 30)]
  [TestCase(0b_00000000_00000000_00000000_00000100u, 29)]
  [TestCase(0b_00000000_00000000_00000000_00001000u, 28)]
  [TestCase(0b_00000000_00000000_00000000_00010000u, 27)]
  [TestCase(0b_00000000_00000000_00000000_00100000u, 26)]
  [TestCase(0b_00000000_00000000_00000000_01000000u, 25)]
  [TestCase(0b_00000000_00000000_00000000_10000000u, 24)]
  [TestCase(0b_00000000_00000000_00000001_00000000u, 23)]
  [TestCase(0b_00000000_00000000_00000010_00000000u, 22)]
  [TestCase(0b_00000000_00000000_00000100_00000000u, 21)]
  [TestCase(0b_00000000_00000000_00001000_00000000u, 20)]
  [TestCase(0b_00000000_00000000_00010000_00000000u, 19)]
  [TestCase(0b_00000000_00000000_00100000_00000000u, 18)]
  [TestCase(0b_00000000_00000000_01000000_00000000u, 17)]
  [TestCase(0b_00000000_00000000_10000000_00000000u, 16)]
  [TestCase(0b_00000000_00000001_00000000_00000000u, 15)]
  [TestCase(0b_00000000_00000010_00000000_00000000u, 14)]
  [TestCase(0b_00000000_00000100_00000000_00000000u, 13)]
  [TestCase(0b_00000000_00001000_00000000_00000000u, 12)]
  [TestCase(0b_00000000_00010000_00000000_00000000u, 11)]
  [TestCase(0b_00000000_00100000_00000000_00000000u, 10)]
  [TestCase(0b_00000000_01000000_00000000_00000000u,  9)]
  [TestCase(0b_00000000_10000000_00000000_00000000u,  8)]
  [TestCase(0b_00000001_00000000_00000000_00000000u,  7)]
  [TestCase(0b_00000010_00000000_00000000_00000000u,  6)]
  [TestCase(0b_00000100_00000000_00000000_00000000u,  5)]
  [TestCase(0b_00001000_00000000_00000000_00000000u,  4)]
  [TestCase(0b_00010000_00000000_00000000_00000000u,  3)]
  [TestCase(0b_00100000_00000000_00000000_00000000u,  2)]
  [TestCase(0b_01000000_00000000_00000000_00000000u,  1)]
  [TestCase(0b_10000000_00000000_00000000_00000000u,  0)]
  [TestCase(0b_11111111_11111111_11111111_11111111u,  0)]
  public void LeadingZeroCount_UInt32(uint value, int expected)
    => Assert.AreEqual(
      expected, ShimTypeSystemNumericsBitOperationsLeadingZeroCount.LeadingZeroCount(value),
      $"LeadingZeroCount<UInt32>({value:X8})"
    );

  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 64)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000001uL, 63)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000010uL, 62)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000011uL, 62)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000100uL, 61)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00001000uL, 60)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00010000uL, 59)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00100000uL, 58)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_01000000uL, 57)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_10000000uL, 56)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000001_00000000uL, 55)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000010_00000000uL, 54)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000100_00000000uL, 53)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00001000_00000000uL, 52)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00010000_00000000uL, 51)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00100000_00000000uL, 50)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_01000000_00000000uL, 49)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_10000000_00000000uL, 48)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000001_00000000_00000000uL, 47)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000010_00000000_00000000uL, 46)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000100_00000000_00000000uL, 45)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00001000_00000000_00000000uL, 44)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00010000_00000000_00000000uL, 43)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00100000_00000000_00000000uL, 42)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_01000000_00000000_00000000uL, 41)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_10000000_00000000_00000000uL, 40)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000001_00000000_00000000_00000000uL, 39)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000010_00000000_00000000_00000000uL, 38)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000100_00000000_00000000_00000000uL, 37)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00001000_00000000_00000000_00000000uL, 36)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00010000_00000000_00000000_00000000uL, 35)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00100000_00000000_00000000_00000000uL, 34)]
  [TestCase(0b_00000000_00000000_00000000_00000000_01000000_00000000_00000000_00000000uL, 33)]
  [TestCase(0b_00000000_00000000_00000000_00000000_10000000_00000000_00000000_00000000uL, 32)]
  [TestCase(0b_00000000_00000000_00000000_00000001_00000000_00000000_00000000_00000000uL, 31)]
  [TestCase(0b_00000000_00000000_00000000_00000010_00000000_00000000_00000000_00000000uL, 30)]
  [TestCase(0b_00000000_00000000_00000000_00000100_00000000_00000000_00000000_00000000uL, 29)]
  [TestCase(0b_00000000_00000000_00000000_00001000_00000000_00000000_00000000_00000000uL, 28)]
  [TestCase(0b_00000000_00000000_00000000_00010000_00000000_00000000_00000000_00000000uL, 27)]
  [TestCase(0b_00000000_00000000_00000000_00100000_00000000_00000000_00000000_00000000uL, 26)]
  [TestCase(0b_00000000_00000000_00000000_01000000_00000000_00000000_00000000_00000000uL, 25)]
  [TestCase(0b_00000000_00000000_00000000_10000000_00000000_00000000_00000000_00000000uL, 24)]
  [TestCase(0b_00000000_00000000_00000001_00000000_00000000_00000000_00000000_00000000uL, 23)]
  [TestCase(0b_00000000_00000000_00000010_00000000_00000000_00000000_00000000_00000000uL, 22)]
  [TestCase(0b_00000000_00000000_00000100_00000000_00000000_00000000_00000000_00000000uL, 21)]
  [TestCase(0b_00000000_00000000_00001000_00000000_00000000_00000000_00000000_00000000uL, 20)]
  [TestCase(0b_00000000_00000000_00010000_00000000_00000000_00000000_00000000_00000000uL, 19)]
  [TestCase(0b_00000000_00000000_00100000_00000000_00000000_00000000_00000000_00000000uL, 18)]
  [TestCase(0b_00000000_00000000_01000000_00000000_00000000_00000000_00000000_00000000uL, 17)]
  [TestCase(0b_00000000_00000000_10000000_00000000_00000000_00000000_00000000_00000000uL, 16)]
  [TestCase(0b_00000000_00000001_00000000_00000000_00000000_00000000_00000000_00000000uL, 15)]
  [TestCase(0b_00000000_00000010_00000000_00000000_00000000_00000000_00000000_00000000uL, 14)]
  [TestCase(0b_00000000_00000100_00000000_00000000_00000000_00000000_00000000_00000000uL, 13)]
  [TestCase(0b_00000000_00001000_00000000_00000000_00000000_00000000_00000000_00000000uL, 12)]
  [TestCase(0b_00000000_00010000_00000000_00000000_00000000_00000000_00000000_00000000uL, 11)]
  [TestCase(0b_00000000_00100000_00000000_00000000_00000000_00000000_00000000_00000000uL, 10)]
  [TestCase(0b_00000000_01000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  9)]
  [TestCase(0b_00000000_10000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  8)]
  [TestCase(0b_00000001_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  7)]
  [TestCase(0b_00000010_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  6)]
  [TestCase(0b_00000100_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  5)]
  [TestCase(0b_00001000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  4)]
  [TestCase(0b_00010000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  3)]
  [TestCase(0b_00100000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  2)]
  [TestCase(0b_01000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  1)]
  [TestCase(0b_10000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL,  0)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL,  0)]
  public void LeadingZeroCount_UInt64(ulong value, int expected)
    => Assert.AreEqual(
      expected, ShimTypeSystemNumericsBitOperationsLeadingZeroCount.LeadingZeroCount(value),
      $"LeadingZeroCount<UInt64>({value:X16})"
    );

  [Test]
  public void ShimType_TrailingZeroCount()
    => Assert.AreEqual(
      typeof(ShimTypeSystemNumericsBitOperationsTrailingZeroCount),
#if SYSTEM_NUMERICS_BITOPERATIONS_TRAILINGZEROCOUNT
      typeof(System.Numerics.BitOperations)
#else
      typeof(Smdn.BitOperationsShim)
#endif
    );

  [TestCase(0b_00000000_00000000_00000000_00000000u, 32)]
  [TestCase(0b_00000000_00000000_00000000_00000001u,  0)]
  [TestCase(0b_00000000_00000000_00000000_00000010u,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000011u,  0)]
  [TestCase(0b_00000000_00000000_00000000_00000100u,  2)]
  [TestCase(0b_00000000_00000000_00000000_00001000u,  3)]
  [TestCase(0b_00000000_00000000_00000000_00010000u,  4)]
  [TestCase(0b_00000000_00000000_00000000_00100000u,  5)]
  [TestCase(0b_00000000_00000000_00000000_01000000u,  6)]
  [TestCase(0b_00000000_00000000_00000000_10000000u,  7)]
  [TestCase(0b_00000000_00000000_00000001_00000000u,  8)]
  [TestCase(0b_00000000_00000000_00000010_00000000u,  9)]
  [TestCase(0b_00000000_00000000_00000100_00000000u, 10)]
  [TestCase(0b_00000000_00000000_00001000_00000000u, 11)]
  [TestCase(0b_00000000_00000000_00010000_00000000u, 12)]
  [TestCase(0b_00000000_00000000_00100000_00000000u, 13)]
  [TestCase(0b_00000000_00000000_01000000_00000000u, 14)]
  [TestCase(0b_00000000_00000000_10000000_00000000u, 15)]
  [TestCase(0b_00000000_00000001_00000000_00000000u, 16)]
  [TestCase(0b_00000000_00000010_00000000_00000000u, 17)]
  [TestCase(0b_00000000_00000100_00000000_00000000u, 18)]
  [TestCase(0b_00000000_00001000_00000000_00000000u, 19)]
  [TestCase(0b_00000000_00010000_00000000_00000000u, 20)]
  [TestCase(0b_00000000_00100000_00000000_00000000u, 21)]
  [TestCase(0b_00000000_01000000_00000000_00000000u, 22)]
  [TestCase(0b_00000000_10000000_00000000_00000000u, 23)]
  [TestCase(0b_00000001_00000000_00000000_00000000u, 24)]
  [TestCase(0b_00000010_00000000_00000000_00000000u, 25)]
  [TestCase(0b_00000100_00000000_00000000_00000000u, 26)]
  [TestCase(0b_00001000_00000000_00000000_00000000u, 27)]
  [TestCase(0b_00010000_00000000_00000000_00000000u, 28)]
  [TestCase(0b_00100000_00000000_00000000_00000000u, 29)]
  [TestCase(0b_01000000_00000000_00000000_00000000u, 30)]
  [TestCase(0b_11000000_00000000_00000000_00000000u, 30)]
  [TestCase(0b_10000000_00000000_00000000_00000000u, 31)]
  [TestCase(0b_11111111_11111111_11111111_11111111u,  0)]
  public void TrailingZeroCount_UInt32(uint value, int expected)
    => Assert.AreEqual(
      expected, ShimTypeSystemNumericsBitOperationsTrailingZeroCount.TrailingZeroCount(value),
      $"TrailingZeroCount<UInt32>({value:X8})"
    );

  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 64)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000001uL,  0)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000010uL,  1)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000011uL,  0)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00000100uL,  2)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00001000uL,  3)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00010000uL,  4)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_00100000uL,  5)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_01000000uL,  6)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000000_10000000uL,  7)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000001_00000000uL,  8)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000010_00000000uL,  9)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00000100_00000000uL, 10)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00001000_00000000uL, 11)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00010000_00000000uL, 12)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_00100000_00000000uL, 13)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_01000000_00000000uL, 14)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000000_10000000_00000000uL, 15)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000001_00000000_00000000uL, 16)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000010_00000000_00000000uL, 17)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00000100_00000000_00000000uL, 18)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00001000_00000000_00000000uL, 19)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00010000_00000000_00000000uL, 20)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_00100000_00000000_00000000uL, 21)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_01000000_00000000_00000000uL, 22)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000000_10000000_00000000_00000000uL, 23)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000001_00000000_00000000_00000000uL, 24)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000010_00000000_00000000_00000000uL, 25)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00000100_00000000_00000000_00000000uL, 26)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00001000_00000000_00000000_00000000uL, 27)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00010000_00000000_00000000_00000000uL, 28)]
  [TestCase(0b_00000000_00000000_00000000_00000000_00100000_00000000_00000000_00000000uL, 29)]
  [TestCase(0b_00000000_00000000_00000000_00000000_01000000_00000000_00000000_00000000uL, 30)]
  [TestCase(0b_00000000_00000000_00000000_00000000_10000000_00000000_00000000_00000000uL, 31)]
  [TestCase(0b_00000000_00000000_00000000_00000001_00000000_00000000_00000000_00000000uL, 32)]
  [TestCase(0b_00000000_00000000_00000000_00000010_00000000_00000000_00000000_00000000uL, 33)]
  [TestCase(0b_00000000_00000000_00000000_00000100_00000000_00000000_00000000_00000000uL, 34)]
  [TestCase(0b_00000000_00000000_00000000_00001000_00000000_00000000_00000000_00000000uL, 35)]
  [TestCase(0b_00000000_00000000_00000000_00010000_00000000_00000000_00000000_00000000uL, 36)]
  [TestCase(0b_00000000_00000000_00000000_00100000_00000000_00000000_00000000_00000000uL, 37)]
  [TestCase(0b_00000000_00000000_00000000_01000000_00000000_00000000_00000000_00000000uL, 38)]
  [TestCase(0b_00000000_00000000_00000000_10000000_00000000_00000000_00000000_00000000uL, 39)]
  [TestCase(0b_00000000_00000000_00000001_00000000_00000000_00000000_00000000_00000000uL, 40)]
  [TestCase(0b_00000000_00000000_00000010_00000000_00000000_00000000_00000000_00000000uL, 41)]
  [TestCase(0b_00000000_00000000_00000100_00000000_00000000_00000000_00000000_00000000uL, 42)]
  [TestCase(0b_00000000_00000000_00001000_00000000_00000000_00000000_00000000_00000000uL, 43)]
  [TestCase(0b_00000000_00000000_00010000_00000000_00000000_00000000_00000000_00000000uL, 44)]
  [TestCase(0b_00000000_00000000_00100000_00000000_00000000_00000000_00000000_00000000uL, 45)]
  [TestCase(0b_00000000_00000000_01000000_00000000_00000000_00000000_00000000_00000000uL, 46)]
  [TestCase(0b_00000000_00000000_10000000_00000000_00000000_00000000_00000000_00000000uL, 47)]
  [TestCase(0b_00000000_00000001_00000000_00000000_00000000_00000000_00000000_00000000uL, 48)]
  [TestCase(0b_00000000_00000010_00000000_00000000_00000000_00000000_00000000_00000000uL, 49)]
  [TestCase(0b_00000000_00000100_00000000_00000000_00000000_00000000_00000000_00000000uL, 50)]
  [TestCase(0b_00000000_00001000_00000000_00000000_00000000_00000000_00000000_00000000uL, 51)]
  [TestCase(0b_00000000_00010000_00000000_00000000_00000000_00000000_00000000_00000000uL, 52)]
  [TestCase(0b_00000000_00100000_00000000_00000000_00000000_00000000_00000000_00000000uL, 53)]
  [TestCase(0b_00000000_01000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 54)]
  [TestCase(0b_00000000_10000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 55)]
  [TestCase(0b_00000001_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 56)]
  [TestCase(0b_00000010_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 57)]
  [TestCase(0b_00000100_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 58)]
  [TestCase(0b_00001000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 59)]
  [TestCase(0b_00010000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 60)]
  [TestCase(0b_00100000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 61)]
  [TestCase(0b_01000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 62)]
  [TestCase(0b_11000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 62)]
  [TestCase(0b_10000000_00000000_00000000_00000000_00000000_00000000_00000000_00000000uL, 63)]
  [TestCase(0b_11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111uL,  0)]
  public void TrailingZeroCount_UInt64(ulong value, int expected)
    => Assert.AreEqual(
      expected, ShimTypeSystemNumericsBitOperationsTrailingZeroCount.TrailingZeroCount(value),
      $"TrailingZeroCount<UInt64>({value:X16})"
    );
}
