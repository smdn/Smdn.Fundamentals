# EditorConfig is awesome: https://EditorConfig.org

root = true

[*]
insert_final_newline = true
indent_style = space
trim_trailing_whitespace = true:suggestion

[*.cs]
charset = utf-8
indent_size = 2
end_of_line = lf
insert_final_newline = true

# https://github.com/editorconfig/editorconfig/wiki/EditorConfig-Properties#ideas-for-domain-specific-properties
indent_brace_style = K&R

[*.sln]
charset = utf-8-bom
end_of_line = crlf

[*.{csproj,vbproj,proj,props,targets,ruleset}]
charset = utf-8-bom
indent_size = 2
end_of_line = crlf

[*.sh]
end_of_line = lf
indent_size = 2

#
# code style settings
#   https://docs.microsoft.com/ja-jp/visualstudio/ide/create-portable-custom-editor-options
#   https://docs.microsoft.com/ja-jp/visualstudio/ide/editorconfig-code-style-settings-reference
#   https://kent-boogaart.com/blog/editorconfig-reference-for-c-developers
#
[*.cs]
#
# Example EditorConfig file
# https://learn.microsoft.com/ja-jp/dotnet/fundamentals/code-analysis/code-style-rule-options
#
# Organize usings
dotnet_sort_system_directives_first = true
# this. preferences
dotnet_style_qualification_for_field      = false:warning
dotnet_style_qualification_for_property   = false:warning
dotnet_style_qualification_for_method     = false:warning
dotnet_style_qualification_for_event      = false:suggestion
# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members  = true:suggestion
dotnet_style_predefined_type_for_member_access              = true:suggestion
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators   = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators   = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators        = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators               = never_if_unnecessary:suggestion
# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
dotnet_style_readonly_field = true:warning
# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

[*.cs]
#
# .NET formatting options
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/dotnet-formatting-options
#

# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/dotnet-formatting-options#using-directive-options
dotnet_separate_import_directive_groups = true


#
# C# formatting options
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options
#

# New-line options
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#new-line-options
csharp_new_line_before_open_brace = methods, local_functions
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = false

# Indentation options
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#indentation-options
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current

# Spacing options
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#spacing-options
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_after_comma = true
csharp_space_before_dot = false
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_after_cast = false
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = ignore
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false

# Wrap options
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#wrap-options
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

#
# Code-style rules
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/
#

# Use collection expression for array (IDE0300)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0300
# Use collection expression for empty (IDE0301)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0301
# Use collection expression for stack alloc (IDE0302)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0302
# Use collection expression for Create() (IDE0303)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0303
# Use collection expression for builder (IDE0304
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0304
# Use collection expression for fluent (IDE0305)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0305
dotnet_style_prefer_collection_expression = true:suggestion

# 'var' preferences (IDE0007 and IDE0008)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:suggestion

# Add braces (IDE0011)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0011
csharp_prefer_braces = when_multiline

# Use throw expression (IDE0016)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0016
csharp_style_throw_expression = true:suggestion

# Inline variable declaration (IDE0018)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0018
csharp_style_inlined_variable_declaration = true:warning

# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0019
# Use pattern matching to avoid 'as' followed by a 'null' check (IDE0019)
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0020-ide0038
# Use pattern matching to avoid 'is' check followed by a cast (IDE0020 and IDE0038)
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion

# Use expression body for constructors (IDE0021)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0021
csharp_style_expression_bodied_constructors = false:warning

# Use expression body for methods (IDE0022)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0022
csharp_style_expression_bodied_methods = when_on_single_line:suggestion

# Use expression body for operators (IDE0023 and IDE0024)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0023-ide0024
csharp_style_expression_bodied_operators = when_on_single_line:suggestion

# Use expression body for properties (IDE0025)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0025
csharp_style_expression_bodied_properties = when_on_single_line:suggestion

# Use expression body for indexers (IDE0026)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0026
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion

# Use expression body for accessors (IDE0027)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0027
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion

# Simplify 'default' expression (IDE0034)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0034
csharp_prefer_simple_default_expression = true:suggestion

# Order modifiers (IDE0036)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0036
csharp_preferred_modifier_order = public,private,protected,internal,file,static,unsafe,volatile,extern,new,virtual,abstract,sealed,override,readonly,required,async:warning

# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0039
# Use local function instead of lambda (IDE0039)
csharp_style_pattern_local_over_anonymous_function = true:suggestion

# Deconstruct variable declaration (IDE0042)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0042
csharp_style_deconstructed_variable_declaration = true:suggestion

# Use expression body for lambdas (IDE0053)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0053
csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion

# Use index operator (IDE0056)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0056
csharp_style_prefer_index_operator = true:suggestion

# Use range operator (IDE0057)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0057
csharp_style_prefer_range_operator = true:suggestion

# Remove unnecessary expression value (IDE0058)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0058
csharp_style_unused_value_expression_statement_preference = discard_variable

# Use expression body for local functions (IDE0061)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0061
csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion

# Make local function static (IDE0062)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0062
csharp_prefer_static_local_function = true:warning

# Use simple 'using' statement (IDE0063)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0063
csharp_prefer_simple_using_statement = true:warning

# 'using' directive placement (IDE0065)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0065
csharp_using_directive_placement = outside_namespace

# Use switch expression (IDE0066)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0066
csharp_style_prefer_switch_expression = true:suggestion

# Use pattern matching (IDE0078 and IDE0260)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0078-ide0260
csharp_style_prefer_pattern_matching = true:suggestion

# Use pattern matching (not operator) (IDE0083)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0083
csharp_style_prefer_not_pattern = true:suggestion

# Simplify new expression (IDE0090)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0090
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning

# Namespace does not match folder structure (IDE0130)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0130
dotnet_style_namespace_match_folder = true:warning

# Namespace declaration preferences (IDE0160 and IDE0161)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0160-ide0161
csharp_style_namespace_declarations = file_scoped:suggestion

# Simplify property pattern (IDE0170)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0170
csharp_style_prefer_extended_property_pattern = true:suggestion

# Use tuple to swap values (IDE0180)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0180
csharp_style_prefer_tuple_swap = true:warning

# Remove unnecessary lambda expression (IDE0200)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0200
csharp_style_prefer_method_group_conversion = true:warning

# Use UTF-8 string literal (IDE0230)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0230
csharp_style_prefer_utf8_string_literals = true:suggestion

# Struct can be made 'readonly' (IDE0250)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0250
csharp_style_prefer_readonly_struct = true:warning

# Member can be made 'readonly' (IDE0251)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0251
csharp_style_prefer_readonly_struct_member = true:warning

# Use primary constructor (IDE0290)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0290
csharp_style_prefer_primary_constructors = true:suggestion

# Use conditional delegate call (IDE1005)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide1005
csharp_style_conditional_delegate_call = true:suggestion
