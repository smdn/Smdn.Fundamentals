<!--
SPDX-FileCopyrightText: 2021 smdn <smdn@smdn.jp>
SPDX-License-Identifier: MIT
-->
<Project>
  <Target Name="GetRepositoryProperties">
    <CallTarget Targets="GetRepositoryProperties_Git" Condition="'$(RepositoryType)' == 'git'"/>
    <CallTarget Targets="GetRepositoryProperties_VersionOrRepositoryTypeNotSupported"/>
  </Target>

  <Target Name="GetRepositoryProperties_Git">
    <PropertyGroup Condition="'$(GitCommandLineInterfacePath)' == ''">
      <GitCommandLineInterfacePath Condition="$([MSBuild]::IsOsPlatform('Windows'))">&quot;$(ProgramFiles)\Git\cmd\git.exe&quot;</GitCommandLineInterfacePath>
      <GitCommandLineInterfacePath Condition="$([MSBuild]::IsOSUnixLike())">git</GitCommandLineInterfacePath>
      <GitCommandLineInterfacePath Condition="'$(GitCommandLineInterfacePath)' == ''">git</GitCommandLineInterfacePath>
    </PropertyGroup>

    <Exec Command="$(GitCommandLineInterfacePath) branch --show-current" Condition="'$(RepositoryBranch)' == ''" ConsoleToMSBuild="true" EchoOff="true" StandardOutputImportance="Low">
      <Output TaskParameter="ConsoleOutput" PropertyName="RepositoryBranch" />
    </Exec>
    <Exec Command="$(GitCommandLineInterfacePath) rev-parse HEAD" Condition="'$(RepositoryCommit)' == ''" ConsoleToMSBuild="true" EchoOff="true" StandardOutputImportance="Low">
      <Output TaskParameter="ConsoleOutput" PropertyName="RepositoryCommit" />
    </Exec>
  </Target>

  <Target Name="GetRepositoryProperties_VersionOrRepositoryTypeNotSupported" Condition="('$(RepositoryBranch)' == '') and ('$(RepositoryCommit)' == '')">
    <Error Text="could not get repository properties (type: $(RepositoryType))" />
  </Target>
</Project>
