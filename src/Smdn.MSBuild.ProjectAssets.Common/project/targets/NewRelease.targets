<!--
SPDX-FileCopyrightText: 2023 smdn <smdn@smdn.jp>
SPDX-License-Identifier: MIT
-->
<Project>
  <!--
    This MSBuild target prepares a new package release.
    - Verifies that the package can be created with the Release configuration.
    - Verifies that the specified version has not already been released.
    - Creates a release target tag that triggers the GitHub Actions' release workflow.
  -->
  <Target
    Name="NewRelease"
    DependsOnTargets="GetRepositoryProperties"
  >
    <PropertyGroup>
      <_PackageIdWithVersion>$(PackageId)-$(PackageVersion)</_PackageIdWithVersion>
      <_ReleaseTargetTagName>new-release/$(RepositoryBranch)/$(_PackageIdWithVersion)</_ReleaseTargetTagName>
    </PropertyGroup>

    <!-- Rebuild and Pack to verify that the package can be created -->
    <MSBuild
      Projects="$(MSBuildProjectFullPath)"
      Targets="Clean;Pack"
      Properties="Configuration=Release"
    />

    <Exec
      Command="$(_InvokeProjectAssetsCommonPowerShellScript)QueryNuGetPackageReleased.ps1 -PackageId &quot;$(PackageId)&quot; -PackageVersion &quot;$(PackageVersion)&quot;"
      IgnoreExitCode="true"
    >
      <Output TaskParameter="ExitCode" PropertyName="_QueryNuGetPackageReleasedExitCode" />
    </Exec>

    <Error
      Text="'$(_PackageIdWithVersion)' has already been released. Make sure the package version is updated."
      Condition=" '$(_QueryNuGetPackageReleasedExitCode)' == '0' "
      File="$(MSBuildProjectFullPath)"
    />

    <Warning
      Text="A new package will be released from the branch '$(RepositoryBranch)'"
      Condition=" '$(RepositoryBranch)' != 'main' "
      File="$(MSBuildProjectFullPath)"
    />

    <Exec
      Command="git tag --message=&quot;new release target tag for $(_PackageIdWithVersion)&quot; $(_ReleaseTargetTagName) $(RepositoryCommit)"
      EchoOff="false"
    />
    <Message Text="created release target tag '$(_ReleaseTargetTagName)'" Importance="high" />
  </Target>
</Project>
