<!--
SPDX-FileCopyrightText: 2023 smdn <smdn@smdn.jp>
SPDX-License-Identifier: MIT
-->
<Project>
  <!--
    This MSBuild target downloads the .nuspec file of the latest release,
    and compares it with the .nuspec file generated by GenerateNuspec target.
  -->
  <Target
    Name="GenerateNuspecDifference"
    DependsOnTargets="GenerateNuspec"
  >
    <PropertyGroup>
      <!-- set defaults -->
      <NuspecDifferenceOutputPath
        Condition=" '$(NuspecDifferenceOutputPath)' == '' "
      >$(NuspecOutputPath)$(PackageId).nuspec.diff</NuspecDifferenceOutputPath>
      <NuspecDifferenceExceptFilesOutputPath
        Condition=" '$(NuspecDifferenceExceptFilesOutputPath)' == '' "
      >$(NuspecOutputPath)$(PackageId).nuspec.except-files.diff</NuspecDifferenceExceptFilesOutputPath>

      <!-- a file path to download and save the latest .nuspec file -->
      <_LatestNuspecFilePath>$(NuspecOutputPath)$(PackageId).latest.nuspec</_LatestNuspecFilePath>
    </PropertyGroup>

    <!-- determine the path to generated .nuspec file from NuGetPackOutput item group. -->
    <ItemGroup>
      <_NuGetPackNuspecOutput Include="@(NuGetPackOutput)" Condition=" '%(Extension)' == '.nuspec' " />
    </ItemGroup>
    <PropertyGroup>
      <_GeneratedNuspecFilePath>%(_NuGetPackNuspecOutput.Identity)</_GeneratedNuspecFilePath>
    </PropertyGroup>

    <Error
      Text=".nuspec file not generated or not found"
      Condition="!Exists($(_GeneratedNuspecFilePath))"
    />

    <!-- get latest version of the released package -->
    <Exec
      Command="$(_InvokeProjectAssetsCommonPowerShellScript)QueryNuGetPackageLatestVersion.ps1 -PackageId '$(PackageId)'"
      ConsoleToMsBuild="true"
      EchoOff="true"
      StandardOutputImportance="low"
    >
      <Output TaskParameter="ConsoleOutput" PropertyName="_PackageVersionLatest" />
    </Exec>

    <Warning
      Text="Package $(PackageId) has not been released yet."
      Condition=" '$(_PackageVersionLatest)' == '' "
    />

    <!-- download nuspec of latest version (if not file is not exist) -->
    <Exec
      Command="$(_InvokeProjectAssetsCommonPowerShellScript)DownloadNuspec.ps1 -PackageId '$(PackageId)' -PackageVersion '$(_PackageVersionLatest)' -FilePath '$(_LatestNuspecFilePath)'"
      EchoOff="true"
      Condition="!Exists($(_LatestNuspecFilePath))"
    />

    <!-- generate diff -->
    <PropertyGroup>
      <_InvokeCompareNuspecDiffCommandLine>$(_InvokeProjectAssetsCommonPowerShellScript)CompareNuspecDiff.ps1 -NewNuspecPath '$(_GeneratedNuspecFilePath)'</_InvokeCompareNuspecDiffCommandLine>
      <_InvokeCompareNuspecDiffCommandLine
        Condition="Exists($(_LatestNuspecFilePath))"
      >$(_InvokeCompareNuspecDiffCommandLine) -OldNuspecPath '$(_LatestNuspecFilePath)'</_InvokeCompareNuspecDiffCommandLine>
      <_InvokeCompareNuspecDiffExceptFilesElementCommandLine>$(_InvokeCompareNuspecDiffCommandLine) -ExceptFilesElement</_InvokeCompareNuspecDiffExceptFilesElementCommandLine>

      <_NuspecDifferenceMessagePrefix>$(MSBuildProjectName) v$(PackageVersion)</_NuspecDifferenceMessagePrefix>
      <_NuspecDifferenceMessagePrefix Condition=" '$(_PackageVersionLatest)' != '' ">$(MSBuildProjectName) v$(PackageVersion) vs v$(_PackageVersionLatest)</_NuspecDifferenceMessagePrefix>
    </PropertyGroup>

    <Exec
      Command="$(_InvokeCompareNuspecDiffCommandLine) -FilePath '$(NuspecDifferenceOutputPath)'"
      EchoOff="true"
    />
    <Message Text="$(_NuspecDifferenceMessagePrefix): $([System.IO.Path]::GetFullPath('$(NuspecDifferenceOutputPath)'))" Importance="high" />

    <Exec
      Command="$(_InvokeCompareNuspecDiffExceptFilesElementCommandLine) -FilePath '$(NuspecDifferenceExceptFilesOutputPath)'"
      EchoOff="true"
    />
    <Message Text="$(_NuspecDifferenceMessagePrefix): $([System.IO.Path]::GetFullPath('$(NuspecDifferenceExceptFilesOutputPath)'))" Importance="high" />
  </Target>
</Project>
