<!--
SPDX-FileCopyrightText: 2022 smdn <smdn@smdn.jp>
SPDX-License-Identifier: MIT
-->
<Project>
  <!-- Consider the project file named with '*.Tests.*proj' a test project -->
  <PropertyGroup Condition="$(MSBuildProjectName.EndsWith('.Tests'))">
    <IsTestProject Condition=" '$(IsTestProject)' == '' ">true</IsTestProject>

    <!-- determines the test target project name from the test project name (Smdn.*.Tests -> Smdn.*) -->
    <_SmdnTestProjectFileNameSuffix>.Tests$(MSBuildProjectExtension)</_SmdnTestProjectFileNameSuffix>
    <SmdnTestTargetProjectName>$(MSBuildProjectFile.Replace('$(_SmdnTestProjectFileNameSuffix)', ''))</SmdnTestTargetProjectName>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(IsTestProject)' != 'true' " Label="Properties for the library project">
    <!-- assembly defaults -->
    <AssemblyCLSCompliant>true</AssemblyCLSCompliant>

    <!-- project defaults -->
    <!-- enables generating documentation file; also intended to supressing the following warning: -->
    <!-- CSC : warning EnableGenerateDocumentationFile: Set MSBuild property 'GenerateDocumentationFile' to 'true' in project file to enable IDE0005 (Remove unnecessary usings/imports) on build (https://github.com/dotnet/roslyn/issues/41640) -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>

    <!-- code analysis defaults -->
    <!-- ref: https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#code-analysis-properties -->
    <AnalysisLevel>latest</AnalysisLevel>
    <AnalysisMode>Recommended</AnalysisMode>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>

    <!-- source link defaults -->
    <!-- ref: https://github.com/dotnet/sourcelink -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <DebugType>embedded</DebugType>

    <!-- package defaults -->
    <EnablePackageValidation>true</EnablePackageValidation>
    <GeneratePackageReadmeFile>true</GeneratePackageReadmeFile>
    <Authors>smdn</Authors>

    <!-- trimming defaults -->
    <!-- ref: https://learn.microsoft.com/dotnet/core/deploying/trimming/prepare-libraries-for-trimming -->
    <EnableTrimAnalyzer
      Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net6.0'))"
    >true</EnableTrimAnalyzer>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(IsTestProject)' == 'true' " Label="Properties for the test project">
    <IsPackable>false</IsPackable>

    <!-- code analysis defaults -->
    <AnalysisLevel>latest</AnalysisLevel>
    <AnalysisModeDesign>None</AnalysisModeDesign>
    <AnalysisModeDocumentation>None</AnalysisModeDocumentation>
    <AnalysisModeGlobalization>Recommended</AnalysisModeGlobalization>
    <AnalysisModeInteroperability>Recommended</AnalysisModeInteroperability>
    <AnalysisModeMaintainability>Recommended</AnalysisModeMaintainability>
    <AnalysisModeNaming>None</AnalysisModeNaming>
    <AnalysisModePerformance>None</AnalysisModePerformance>
    <AnalysisModeSingleFile>None</AnalysisModeSingleFile>
    <AnalysisModeReliability>Recommended</AnalysisModeReliability>
    <AnalysisModeSecurity>Recommended</AnalysisModeSecurity>
    <AnalysisModeStyle>Recommended</AnalysisModeStyle>
    <AnalysisModeUsage>None</AnalysisModeUsage>
  </PropertyGroup>

  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.csproj'" Label="C#-only properties">
    <!-- build defaults -->
    <LangVersion>latest</LangVersion>
    <Deterministic>true</Deterministic>
  </PropertyGroup>

  <ItemGroup Label="build assets">
    <SmdnBuildAssetFiles Include="$(MSBuildThisFileDirectory)..\assets\**"/>
    <SmdnBuildAssetFiles  Update="$(MSBuildThisFileDirectory)..\assets\**">
      <Destination>%(RecursiveDir)%(Filename)%(Extension)</Destination>
    </SmdnBuildAssetFiles>
  </ItemGroup>

  <ItemGroup Label="build assets for local import" Condition="'$(_SmdnProjectAssets_ImportFromLocal)' == 'true'">
    <SmdnBuildAssetFiles Update="$(MSBuildThisFileDirectory)..\assets\src\include.editorconfig">
      <Destination>src\.editorconfig</Destination>
    </SmdnBuildAssetFiles>
    <SmdnBuildAssetFiles Update="$(MSBuildThisFileDirectory)..\assets\tests\include.editorconfig">
      <Destination>tests\.editorconfig</Destination>
    </SmdnBuildAssetFiles>
  </ItemGroup>

  <ItemGroup Condition=" '$(IsTestProject)' != 'true' " Label="Items for the library project">
    <!-- enables the compiler to reference the properties for project name and root namespace to make IDE0130 work -->
    <!-- ref: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0130 -->
    <CompilerVisibleProperty Include="RootNamespace" />
    <CompilerVisibleProperty Include="ProjectDir" />
  </ItemGroup>

  <ImportGroup Condition=" '$(IsTestProject)' != 'true' ">
    <!-- StyleCop code analysis -->
    <Import Project="$(MSBuildThisFileDirectory)CodeAnalysis.StyleCop.props" />
    <!-- source link -->
    <Import Project="$(MSBuildThisFileDirectory)SourceLink.props" />
    <!-- API list generator -->
    <Import Project="$(MSBuildThisFileDirectory)ApiListGenerator.props" />
  </ImportGroup>

  <ImportGroup Condition=" '$(IsTestProject)' == 'true' ">
    <!-- NUnit Analyzers code analysis -->
    <Import Project="$(MSBuildThisFileDirectory)CodeAnalysis.NUnitAnalyzers.props" />
    <!-- LiquidTestReports -->
    <Import Project="$(MSBuildThisFileDirectory)LiquidTestReports.props" />
  </ImportGroup>

</Project>
