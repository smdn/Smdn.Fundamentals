<!--
SPDX-FileCopyrightText: 2023 smdn <smdn@smdn.jp>
SPDX-License-Identifier: MIT
-->
<Project>
  <PropertyGroup>
    <!-- LiquidTestReports parameters not allowed to be changed -->
    <LiquidTestReportsTestReportFileExtension>.liquid.md</LiquidTestReportsTestReportFileExtension> <!-- file extension for the test report file (note that the file name format of the test report output by LiquidTestReports.Custom is not customizable) -->
    <LiquidTestReportsTestReportDirectory>$(MSBuildProjectDirectory)\TestResults\LiquidTestReports\</LiquidTestReportsTestReportDirectory> <!-- output directory for the test report file -->

    <!-- LiquidTestReports.Custom requires framework >= net451 or >= netstandard2.0 -->
    <LiquidTestReportsCustomAvailable>true</LiquidTestReportsCustomAvailable>
    <LiquidTestReportsCustomAvailable
      Condition="
        '$(TargetFramework)' == 'net45' or
        $(TargetFramework.StartsWith('netcoreapp1')) or
        $(TargetFramework.StartsWith('netstandard1'))
      "
    >false</LiquidTestReportsCustomAvailable>

    <!-- disable if LiquidTestReports.Custom is not available -->
    <EnableLiquidTestReports Condition=" '$(LiquidTestReportsCustomAvailable)' != 'true' ">false</EnableLiquidTestReports>

    <!-- Define values that can be used as parameters in templates -->
    <LiquidTestReportsTemplateExtraParameter
    >$(LiquidTestReportsTemplateExtraParameter)%3bRuntimeIdentifier=$([System.Runtime.InteropServices.RuntimeInformation]::RuntimeIdentifier)</LiquidTestReportsTemplateExtraParameter>
  </PropertyGroup>

  <ItemGroup Condition=" '$(EnableLiquidTestReports)' == 'true' ">
    <PackageReference Include="LiquidTestReports.Custom" Version="$(LiquidTestReportsCustomPackageReferenceVersion)" />
    <PackageReference Include="DotLiquid" Version="$(DotLiquidPackageReferenceVersion)" />
  </ItemGroup>

  <PropertyGroup Condition=" '$(EnableLiquidTestReports)' == 'true' " Label="VSTestLogger parameters for LiquidTestReports">
    <VSTestBeforeTargets Condition="'$(GITHUB_STEP_SUMMARY)' != '' and '$(EnableLiquidTestReportsGitHubStepSummary)' == 'true' ">$(VSTestBeforeTargets);LiquidTestReportsInitGitHubStepSummary</VSTestBeforeTargets>
    <VSTestAfterTargets Condition=" '$(GITHUB_STEP_SUMMARY)' != '' and '$(EnableLiquidTestReportsGitHubStepSummary)' == 'true' ">$(VSTestAfterTargets);LiquidTestReportsOutputTestLogToGitHubStepSummary</VSTestAfterTargets>

    <LiquidTestReportsTestReportFileExtensionWithTargetFramework>$(LiquidTestReportsTestReportFileExtension)</LiquidTestReportsTestReportFileExtensionWithTargetFramework>
    <LiquidTestReportsTestReportFileExtensionWithTargetFramework Condition=" '$(TargetFramework)' != '' ">.$(TargetFramework)$(LiquidTestReportsTestReportFileExtension)</LiquidTestReportsTestReportFileExtensionWithTargetFramework>

    <LiquidTestReportsLoggerParameter>liquid.custom</LiquidTestReportsLoggerParameter>
    <LiquidTestReportsLoggerParameter>$(LiquidTestReportsLoggerParameter)%3bTemplate=$(LiquidTestReportsTemplateFile)</LiquidTestReportsLoggerParameter>
    <LiquidTestReportsLoggerParameter>$(LiquidTestReportsLoggerParameter)%3bExtension=$(LiquidTestReportsTestReportFileExtensionWithTargetFramework)</LiquidTestReportsLoggerParameter>
    <LiquidTestReportsLoggerParameter>$(LiquidTestReportsLoggerParameter)%3bTestTargetName=$(MSBuildProjectName)</LiquidTestReportsLoggerParameter>
    <LiquidTestReportsLoggerParameter>$(LiquidTestReportsLoggerParameter)%3bOmitPassedTestResults=$(LiquidTestReportsOmitPassedTestResults)</LiquidTestReportsLoggerParameter>
    <LiquidTestReportsLoggerParameter>$(LiquidTestReportsLoggerParameter)%3bEmitTestMessages=$(LiquidTestReportsEmitTestMessages)</LiquidTestReportsLoggerParameter>
    <LiquidTestReportsLoggerParameter>$(LiquidTestReportsLoggerParameter)%3bEmitTestCaseResultMessages=$(LiquidTestReportsEmitTestCaseResultMessages)</LiquidTestReportsLoggerParameter>
    <LiquidTestReportsLoggerParameter>$(LiquidTestReportsLoggerParameter)%3b$(LiquidTestReportsTemplateExtraParameter)</LiquidTestReportsLoggerParameter>

    <VSTestLogger Condition=" '$(VSTestLogger)' != '' ">$(VSTestLogger);</VSTestLogger>
    <VSTestLogger>$(VSTestLogger)$(LiquidTestReportsLoggerParameter)</VSTestLogger>
    <VSTestResultsDirectory>$(LiquidTestReportsTestReportDirectory)</VSTestResultsDirectory>
  </PropertyGroup>

  <Target Name="LiquidTestReportsInitGitHubStepSummary">
    <PropertyGroup>
      <LiquidTestReportsTestStartedAt>$([System.DateTime]::Now.Ticks)</LiquidTestReportsTestStartedAt>
    </PropertyGroup>
  </Target>

  <Target Name="LiquidTestReportsOutputTestLogToGitHubStepSummary">
    <PropertyGroup>
      <LiquidTestReportsTestFinishedAt>$([System.DateTime]::Now.Ticks)</LiquidTestReportsTestFinishedAt>
    </PropertyGroup>

    <ItemGroup>
      <LiquidTestReportsLogFileCandidate Include="$(LiquidTestReportsTestReportDirectory)*$(LiquidTestReportsTestReportFileExtensionWithTargetFramework)" />
    </ItemGroup>

    <ItemGroup Condition=" '@(LiquidTestReportsLogFileCandidate)' != '' ">
      <!-- extract only log files that are created after the started time and before the finished time -->
      <LiquidTestReportsLogFile
        Include="@(LiquidTestReportsLogFileCandidate)"
        Condition="
          ($(LiquidTestReportsTestStartedAt)) &lt;= ($([System.DateTimeOffset]::Parse(%(CreatedTime)).Ticks)) and
          ($([System.DateTimeOffset]::Parse(%(CreatedTime)).Ticks)) &lt; ($(LiquidTestReportsTestFinishedAt))
        "
      />
    </ItemGroup>

    <PropertyGroup>
      <_HasLiquidTestReportsLogFileGenerated>false</_HasLiquidTestReportsLogFileGenerated>
      <_HasLiquidTestReportsLogFileGenerated Condition=" '@(LiquidTestReportsLogFile)' != '' ">true</_HasLiquidTestReportsLogFileGenerated>
    </PropertyGroup>

    <Warning
      Text="No test logs were output to directory '$(LiquidTestReportsTestReportDirectory)'. Make sure that the configurations are valid and there are no syntax errors in the template file."
      File="$(MSBuildProjectFullPath)"
      Condition=" '$(_HasLiquidTestReportsLogFileGenerated)' != 'true' "
    />

    <ItemGroup Condition=" '$(_HasLiquidTestReportsLogFileGenerated)' == 'true' ">
      <LiquidTestReportsLogFileContent Include="$([System.IO.File]::ReadAllText('%(LiquidTestReportsLogFile.Identity)'))" />
    </ItemGroup>

    <PropertyGroup>
      <LiquidTestReportsStepSummaryContents>%0A%0A@(LiquidTestReportsLogFileContent, '%0A%0A----%0A%0A')</LiquidTestReportsStepSummaryContents>
    </PropertyGroup>

    <GitHubActionsStepSummaryAppendContent
      Contents="$(LiquidTestReportsStepSummaryContents)"
      Condition=" '$(_HasLiquidTestReportsLogFileGenerated)' == 'true' "
    />
  </Target>
</Project>
