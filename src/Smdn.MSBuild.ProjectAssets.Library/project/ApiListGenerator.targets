<!--
SPDX-FileCopyrightText: 2022 smdn <smdn@smdn.jp>
SPDX-License-Identifier: MIT
-->
<Project>
  <PropertyGroup Label="API list generator">
    <!-- default configurations -->
    <APIListOutputBaseDirectory Condition=" '$(APIListOutputBaseDirectory)' == '' ">api-list\</APIListOutputBaseDirectory>
    <APIListPackageVersion Condition=" '$(APIListPackageVersion)' == '' ">1.1.7</APIListPackageVersion>
    <APIListLoadIntoReflectionOnlyContext Condition=" '$(APIListLoadIntoReflectionOnlyContext)' == '' ">false</APIListLoadIntoReflectionOnlyContext>

    <_APIListDoGenerate>$(APIListEnableGenerating)</_APIListDoGenerate>
    <!--
      Disable if IncludeBuildOutput is falsy.
      Note that the default value of 'IncludeBuildOutput' is empty, not 'true'.
    -->
    <_APIListDoGenerate Condition=" '$(IncludeBuildOutput)' != '' and '$(IncludeBuildOutput)' != 'true' ">false</_APIListDoGenerate>

    <!-- This is required to import .props and .targets from Smdn.Reflection.ReverseGenerating.ListApi.MSBuild.Tasks -->
    <ExcludeRestorePackageImports
      Condition=" '$(_APIListDoGenerate)' == 'true' and $([MSBuild]::VersionLessThan('$(NETCoreSdkVersion)', '6.0')) "
    >false</ExcludeRestorePackageImports>
  </PropertyGroup>

  <ItemGroup Label="API list generator">
    <PackageReference
      Condition=" '$(_APIListDoGenerate)' == 'true' "
      Update="Smdn.Reflection.ReverseGenerating.ListApi.MSBuild.Tasks"
      Version="[$(APIListPackageVersion)]"
    />
    <PackageReference
      Condition=" '$(_APIListDoGenerate)' != 'true' "
      Remove="Smdn.Reflection.ReverseGenerating.ListApi.MSBuild.Tasks"
    />
  </ItemGroup>

  <!--
    using task from local build assembly instead of tasks from Smdn.Reflection.ReverseGenerating.ListApi.MSBuild.Tasks package reference
    (consider using with `/nr:false`, see https://github.com/dotnet/msbuild/issues/7693)

  <UsingTask
    TaskName="GenerateApiList"
    AssemblyFile="/path/to/build/Smdn.Reflection.ReverseGenerating/src/Smdn.Reflection.ReverseGenerating.ListApi.MSBuild.Tasks/bin/Release/net6.0/Smdn.Reflection.ReverseGenerating.ListApi.MSBuild.Tasks.dll"
  />
  -->

  <Target
    Name="GenerateAPIListOfPackage"
    BeforeTargets="GenerateNuspec"
    Condition=" '$(_APIListDoGenerate)' == 'true' "
    Label="API list generator"
  >
    <ItemGroup>
      <GenerateApiListTargets Include="%(NuGetPackInput.Identity)" Condition="
        '%(NuGetPackInput.MSBuildSourceProjectFile)' == '$(MSBuildProjectFullPath)' and
        '' != '%(NuGetPackInput.TargetFramework)' and
        $([System.String]::new('%(NuGetPackInput.TargetPath)').EndsWith('.dll'))
      ">
        <OutputFilePath>$(APIListOutputBaseDirectory)$(AssemblyName)\$(AssemblyName)-%(NuGetPackInput.TargetFramework).apilist.cs</OutputFilePath>
        <LoadIntoReflectionOnlyContext>$(APIListLoadIntoReflectionOnlyContext)</LoadIntoReflectionOnlyContext>
      </GenerateApiListTargets>
    </ItemGroup>

    <PropertyGroup Condition="'$(GenerateApiList_GenerateNullableAnnotations)' == ''">
      <GenerateApiList_GenerateNullableAnnotations>false</GenerateApiList_GenerateNullableAnnotations>
      <GenerateApiList_GenerateNullableAnnotations
        Condition="'$(Nullable)' == 'enable' or '$(Nullable)' == 'annotations'"
      >true</GenerateApiList_GenerateNullableAnnotations>
    </PropertyGroup>

    <GenerateApiList
      Assemblies="@(GenerateApiListTargets)"
      GenerateLanguagePrimitiveType="true"
      GenerateFullTypeName="false"
      GenerateTypeNameWithDeclaringTypeName="true"
      GenerateAttributeWithNamedArguments="false"
      GenerateStaticMembersFirst="true"
      GenerateValueWithDefaultLiteral="true"
      GenerateNullableAnnotations="$(GenerateApiList_GenerateNullableAnnotations)"
    >
      <Output TaskParameter="GeneratedFiles" ItemName="_GeneratedApiListFiles" />
    </GenerateApiList>

    <ItemGroup>
      <ApiListFiles Include="%(_GeneratedApiListFiles.Identity)">
        <SourceAssembly>%(_GeneratedApiListFiles.SourceAssembly)</SourceAssembly>
        <TargetFramework Condition="'$(TargetFrameworks)' == ''">$(TargetFramework)</TargetFramework>
        <TargetFramework Condition="'$(TargetFrameworks)' != ''">$([System.IO.Path]::GetDirectoryName(
          $([System.IO.Path]::GetRelativePath(
            $([System.IO.Path]::GetFullPath('$(OutputPath)', '$(MSBuildProjectDirectory)')),
            '%(_GeneratedApiListFiles.SourceAssembly)'
          ))
        ))</TargetFramework>
      </ApiListFiles>
    </ItemGroup>
  </Target>
</Project>
